
namespace SuperMarioBros;

public enum PlayerState
{
    PS_IDLE = 0;
    PS_WALK = 1;
    PS_JUMP = 2;
    PS_FALL = 3;
    PS_SQUAT = 4;
    PS_DEATH = 5;
    PS_FLAG = 6;	// 挂在旗杆上
}

public class BattlePlayer : ALittle.DisplayLayout
{
	private ALittle.Sprite _level_1_sprite_right;
	private ALittle.Sprite _level_1_sprite_left;
	private ALittle.Sprite _level_2_sprite_right;
	private ALittle.Sprite _level_2_sprite_left;
	private ALittle.Sprite _level_3_sprite_right;
	private ALittle.Sprite _level_3_sprite_left;

    private int _state;		// 状态
    private int _level = 1;	// 当前等级

    private bool _right = true;	// 朝向
    private double _vx = 0;	// x轴速度
    private double _vy = 0;	// y轴速度
    private double _ax = 0;	// x轴加速度
    private double _ay = 0;	// y轴加速度
    private bool _win = false;

    // 行走变帧参数
    private double _walk_frame_change = 0.0;
    private int _walk_frame = 1;

    private fun TCtor()
    {
        this._level_1_sprite_right.visible = false;
        this._level_1_sprite_left.visible = false;
        this._level_2_sprite_right.visible = false;
        this._level_2_sprite_left.visible = false;
        this._level_3_sprite_right.visible = false;
        this._level_3_sprite_left.visible = false;
    }

    public fun Init(int row, int col, int level)
    {
        this._level_1_sprite_right.visible = false;
        this._level_1_sprite_left.visible = false;
        this._level_2_sprite_right.visible = false;
        this._level_2_sprite_left.visible = false;
        this._level_3_sprite_right.visible = false;
        this._level_3_sprite_left.visible = false;
        this.visible = true;

        this._state = PlayerState.PS_IDLE;
        this._win = false;
        this._right = true;
        this._vx = 0;
        this._vy = 0;
        this._ax = 0;
        this._ay = 0;
        this._level = level;
        if (this._level == 1)
        {
            this._level_1_sprite_right.visible = true;
            this.height = this._level_1_sprite_right.height;
            this._level_1_sprite_right.col_index = 1;
            this._level_1_sprite_right.row_index = 1;

            this.x = col * TILE_WIDTH;
            this.y = row * TILE_HEIGHT - this._level_1_sprite_right.height;
        }
        elseif (this._level == 2)
        {
            this._level_2_sprite_right.visible = true;
            this.height = this._level_2_sprite_right.height;
            this._level_2_sprite_right.col_index = 2;

            this.x = col * TILE_WIDTH;
            this.y = row * TILE_HEIGHT - this._level_2_sprite_right.height;
        }
        elseif (this._level == 3)
        {
            this._level_3_sprite_right.visible = true;
            this.height = this._level_3_sprite_right.height;
            this._level_3_sprite_right.col_index = 2;

            this.x = col * TILE_WIDTH;
            this.y = row * TILE_HEIGHT - this._level_3_sprite_right.height;
        }
    }

    public fun Fire()
    {

    }

    public fun SmallJump()
    {
        this._state = PlayerState.PS_JUMP;
        this._vy = -3;
    }

    public fun Flag()
    {
        if (this._state == PlayerState.PS_DEATH) return;
        if (this._state == PlayerState.PS_FLAG) return;

        this._state = PlayerState.PS_FLAG;
        this._vx = 0;
        this._vy = 3;
        this._ax = 0;
        this._ay = 0;
        this.UpdateFlag();
    }

    public get win() : bool { return this._win; }
    public set win(bool value) { this._win = value; }

    public fun Death()
    {
        if (this._state == PlayerState.PS_DEATH) return;

        this._state = PlayerState.PS_DEATH;

        this._level_1_sprite_right.visible = false;
        this._level_1_sprite_left.visible = false;
        this._level_2_sprite_right.visible = false;
        this._level_2_sprite_left.visible = false;
        this._level_3_sprite_right.visible = false;
        this._level_3_sprite_left.visible = false;

        this._level_1_sprite_right.visible = true;
        this.height = this._level_1_sprite_right.height;
        this._level_1_sprite_right.col_index = 2;
        this._level_1_sprite_right.row_index = 1;

        var loop = new ALittle.LoopList();
        loop.AddUpdater(new ALittle.LoopLinear(this, "y", this.y - TILE_HEIGHT * 5, 500, 0));
        loop.AddUpdater(new ALittle.LoopLinear(this, "y", A_UISystem.view_height, 200, 500));
        loop.AddUpdater(new ALittle.LoopTimer(bind(g_GCenter.battle_scene.Restart, g_GCenter.battle_scene), 100));
        loop.Start();
    }

    public get state() : int { return this._state; }
    public get right() : bool { return this._right; }

    public fun Idle()
    {
        this._state = PlayerState.PS_IDLE;
        this._vx = 0;
        this._vy = 0;
        this._ax = 0;
        this._ay = 0;
        this.UpdateIdle();
    }

    public fun UpdateFrame(int frame_time)
    {
        if (this._state == PlayerState.PS_DEATH) return;

        // 更新x轴方向
        this._vx += this._ax * frame_time;

        var walk_speedup = A_UISystem.sym_map[ALittle.UIEnumTypes.KEY_J] != null && this._state == PlayerState.PS_WALK;
        if (walk_speedup)
        {
            if (this._vx > PLAYER_MAX_WALK_SPEED_2) this._vx = PLAYER_MAX_WALK_SPEED_2;
            elseif (this._vx < -PLAYER_MAX_WALK_SPEED_2) this._vx = -PLAYER_MAX_WALK_SPEED_2;
        }
        else
        {
            if (this._vx > PLAYER_MAX_WALK_SPEED_1) this._vx = PLAYER_MAX_WALK_SPEED_1;
            elseif (this._vx < -PLAYER_MAX_WALK_SPEED_1) this._vx = -PLAYER_MAX_WALK_SPEED_1;
        }
            // 更新y轴方向
        this._vy += this._ay * frame_time;

        var walk_left = A_UISystem.sym_map[ALittle.UIEnumTypes.KEY_A] != null;
        var walk_right = A_UISystem.sym_map[ALittle.UIEnumTypes.KEY_D] != null;
        var squat_down = A_UISystem.sym_map[ALittle.UIEnumTypes.KEY_S] != null;
        var jump = A_UISystem.sym_map[ALittle.UIEnumTypes.KEY_K] != null;

        if (this._win)
        {
            walk_left = false;
            walk_right = true;
            squat_down = false;
            jump = false;
        }

        if (this._state == PlayerState.PS_IDLE)
        {
            // 移动
            this.x += this._vx;
            this.y += this._vy;

            // 空闲情况下左右行走
            if (walk_left)
            {
                this._state = PlayerState.PS_WALK;
                this._ax = -PLAYER_INIT_X_SPEED_RATE;
                this._right = false;
                this.UpdateIdle();
            }
            elseif (walk_right)
            {
                this._state = PlayerState.PS_WALK;
                this._ax = PLAYER_INIT_X_SPEED_RATE;
                this._right = true;
                this.UpdateIdle();
            }

            // 空闲状态下跳跃
            if (jump)
            {
                this._state = PlayerState.PS_JUMP;
                this._vy = -PLAYER_INIT_JUMP_SPEED;
                this._ay = PLAYER_INIT_Y_SPEED_RATE;
                this.UpdateJump();
            }
            elseif (squat_down)
            {
                this._state = PlayerState.PS_SQUAT;
            }
        }
        elseif (this._state == PlayerState.PS_WALK)
        {
            if (walk_left)
            {
                this._ax = -PLAYER_INIT_X_SPEED_RATE;
                if (this._right)
                {
                    this._right = false;
                    this.UpdateLeftRight();
                }
            }
            elseif (walk_right)
            {
                this._ax = PLAYER_INIT_X_SPEED_RATE;
                if (!this._right)
                {
                    this._right = true;
                    this.UpdateLeftRight();
                }
            }
            else
            {
                if (this._vx != 0)
                {
                    this._ax = 0;
                    this._vx *= 0.1;
                    if (this._vx < 0.001) this._vx = 0;
                }
                else
                {
                    this._state = PlayerState.PS_IDLE;
                    this.UpdateIdle();
                }
            }

            // 空闲状态下跳跃
            if (jump)
            {
                this._state = PlayerState.PS_JUMP;
                this._vy = -PLAYER_INIT_JUMP_SPEED;
                this._ay = PLAYER_INIT_Y_SPEED_RATE;
                this.UpdateJump();
            }
            elseif (squat_down)
            {
                this._state = PlayerState.PS_SQUAT;
            }

            this.x += this._vx;

            var check_right, right_x = g_GCenter.battle_scene.CheckRight(this);
            if (check_right)
            {
                this.x = right_x - this.width;
            }

            var check_left, left_x = g_GCenter.battle_scene.CheckLeft(this);
            if (check_left)
            {
                this.x = left_x;
            }

            this.y += this._vy;
        }
        elseif (this._state == PlayerState.PS_JUMP)
        {
            if (walk_left)
            {
                this._ax = -PLAYER_INIT_X_SPEED_RATE;
            }
            elseif (walk_right)
            {
                this._ax = PLAYER_INIT_X_SPEED_RATE;
            }
            else
            {
                if (this._vx != 0)
                {
                    this._ax = 0;
                    if (this._vx < 0.001) this._vx = 0;
                }
            }

            // 空闲状态下跳跃
            if (jump && this._vy < 0)
                this._ay = PLAYER_INIT_Y_SPEED_RATE / 3;
            else
                this._ay = PLAYER_INIT_Y_SPEED_RATE;

            this.y += this._vy;
            // 如果头撞到东西就往下
            if (this._vy < 0)
            {
                var check_up, up_y = g_GCenter.battle_scene.CheckUp(this);
                if (check_up)
                {
                    this._vy = -this._vy;
                    this.y = up_y;
                }
            }

            var check_down, down_y = g_GCenter.battle_scene.CheckDown(this);
            if (check_down)
            {
                this._state = PlayerState.PS_WALK;
                this._vy = 0;
                this._ay = 0;
                this.y = down_y - this.height;
            }
            this.x += this._vx;

            var check_right, right_x = g_GCenter.battle_scene.CheckRight(this);
            if (check_right)
            {
                this.x = right_x - this.width;
            }

            var check_left, left_x = g_GCenter.battle_scene.CheckLeft(this);
            if (check_left)
            {
                this.x = left_x;
            }
        }
        elseif (this._state == PlayerState.PS_FALL)
        {
            this.y += this._vy;

            var check_down, down_y = g_GCenter.battle_scene.CheckDown(this);
            if (check_down)
            {
                this._state = PlayerState.PS_WALK;
                this._vy = 0;
                this._ay = 0;
                this.y = down_y - this.height;
            }

            this.x += this._vx;

            var check_right, right_x = g_GCenter.battle_scene.CheckRight(this);
            if (check_right)
            {
                this.x = right_x - this.width;
            }

            var check_left, left_x = g_GCenter.battle_scene.CheckLeft(this);
            if (check_left)
            {
                this.x = left_x;
            }
        }
        elseif (this._state == PlayerState.PS_SQUAT)
        {
            if (walk_left)
            {
                this._ax = 0;
                if (this._right)
                {
                    this._right = false;
                    this.UpdateLeftRight();
                }
            }
            elseif (walk_right)
            {
                this._ax = 0;
                if (!this._right)
                {
                    this._right = true;
                    this.UpdateLeftRight();
                }
            }
            else
            {
                if (this._vx != 0)
                {
                    this._ax = 0;
                    this._vx *= 0.1;
                    if (this._vx < 0.001) this._vx = 0;
                }
            }

            // 空闲状态下跳跃
            if (!squat_down)
            {
                this._state = PlayerState.PS_WALK;
            }

            this.x += this._vx;

            var check_right, right_x = g_GCenter.battle_scene.CheckRight(this);
            if (check_right)
            {
                this.x = right_x - this.width;
            }

            var check_left, left_x = g_GCenter.battle_scene.CheckLeft(this);
            if (check_left)
            {
                this.x = left_x;
            }

            this.y += this._vy;
        }
        else
        {
            this.x += this._vx;
            this.y += this._vy;
        }

        if (this._state == PlayerState.PS_WALK || this._state == PlayerState.PS_IDLE)
        {
            // 如果没有踩在地板上，那么就改为掉落状态
            var check_down, down_y = g_GCenter.battle_scene.CheckDown(this);
            if (!check_down)
            {
                this._state = PlayerState.PS_FALL;
                this._vy = 0;
                this._vx /= 2;
                this._ay = PLAYER_INIT_Y_SPEED_RATE;
            }
        }

        if (this._state == PlayerState.PS_FLAG)
        {
            // 如果没有踩在地板上，那么就改为掉落状态
            var check_down, down_y = g_GCenter.battle_scene.CheckDown(this);
            if (check_down)
            {
                this._win = true;
                this._state = PlayerState.PS_WALK;
                this._vy = 0;
                this._ay = 0;
                this.y = down_y - this.height;
            }
        }

        if (this._state == PlayerState.PS_WALK)
        {
            this.WalkUpdateFrame(frame_time);
        }
        elseif (this._state == PlayerState.PS_SQUAT)
        {
            this.UpdateSquat();
        }
        elseif (this._state == PlayerState.PS_FLAG)
        {
            this.UpdateFlag();
        }
    }

    private fun UpdateFlag()
    {
        this.UpdateLeftRight();
        if (this._level == 1)
        {
            this._level_1_sprite_right.col_index = 1;
            this._level_1_sprite_right.row_index = 2;
            this._level_1_sprite_left.col_index = 7;
            this._level_1_sprite_left.row_index = 2;
        }
        elseif (this._level == 2)
        {
            this._level_2_sprite_right.col_index = 1;
            this._level_2_sprite_right.row_index = 2;
            this._level_2_sprite_left.col_index = 7;
            this._level_2_sprite_left.row_index = 2;
        }
        elseif (this._level == 3)
        {
            this._level_3_sprite_right.col_index = 1;
            this._level_3_sprite_right.row_index = 2;
            this._level_3_sprite_left.col_index = 7;
            this._level_3_sprite_left.row_index = 2;
        }
    }

    private fun UpdateJump()
    {
        this.UpdateLeftRight();
        if (this._level == 1)
        {
            this._level_1_sprite_right.col_index = 7;
            this._level_1_sprite_right.row_index = 1;
            this._level_1_sprite_left.col_index = 1;
            this._level_1_sprite_left.row_index = 1;
        }
        elseif (this._level == 2)
        {
            this._level_2_sprite_right.col_index = 7;
            this._level_2_sprite_right.row_index = 1;
            this._level_2_sprite_left.col_index = 1;
            this._level_2_sprite_left.row_index = 1;
        }
        elseif (this._level == 3)
        {
            this._level_3_sprite_right.col_index = 7;
            this._level_3_sprite_right.row_index = 1;
            this._level_3_sprite_left.col_index = 1;
            this._level_3_sprite_left.row_index = 1;
        }
    }

    private fun UpdateSquat()
    {
        this.UpdateLeftRight();

        if (this._level == 2)
        {
            this._level_2_sprite_right.col_index = 1;
            this._level_2_sprite_right.row_index = 1;
            this._level_2_sprite_left.col_index = 7;
            this._level_2_sprite_left.row_index = 1;
        }
        elseif (this._level == 3)
        {
            this._level_3_sprite_right.col_index = 1;
            this._level_3_sprite_right.row_index = 1;
            this._level_3_sprite_left.col_index = 7;
            this._level_3_sprite_left.row_index = 1;
        }
    }

    private fun UpdateIdle()
    {
        this.UpdateLeftRight();
        if (this._level == 1)
        {
            this._level_1_sprite_right.col_index = 1;
            this._level_1_sprite_right.row_index = 1;
            this._level_1_sprite_left.col_index = 7;
            this._level_1_sprite_left.row_index = 1;
        }
        elseif (this._level == 2)
        {
            this._level_2_sprite_right.col_index = 2;
            this._level_2_sprite_right.row_index = 1;
            this._level_2_sprite_left.col_index = 6;
            this._level_2_sprite_left.row_index = 1;
        }
        elseif (this._level == 3)
        {
            this._level_3_sprite_right.col_index = 2;
            this._level_3_sprite_right.row_index = 1;
            this._level_3_sprite_left.col_index = 6;
            this._level_3_sprite_left.row_index = 1;
        }
    }

    private fun UpdateLeftRight()
    {
        if (this._level == 1)
        {
            this._level_1_sprite_right.visible = this._right;
            this._level_1_sprite_left.visible = !this._right;
        }
        elseif (this._level == 2)
        {
            this._level_2_sprite_right.visible = this._right;
            this._level_2_sprite_left.visible = !this._right;
        }
        elseif (this._level == 3)
        {
            this._level_3_sprite_right.visible = this._right;
            this._level_3_sprite_left.visible = !this._right;
        }
    }

    private fun WalkUpdateFrame(int frame_time)
    {
        var rate = 0.006;
        if (this._level != 1) rate = 0.004;

        this._walk_frame_change += rate * frame_time * (1 + ALittle.Math_Abs(this._vx));
        if (this._walk_frame_change >= 1)
        {
            this._walk_frame_change = 0.0;
            this._walk_frame += 1;

            if (this._ax > 0 && this._vx < 0)
            {
                if (this._level == 1)
                {
                    this._walk_frame = 1;
                    this._level_1_sprite_right.row_index = 1;
                    this._level_1_sprite_right.col_index = 3;
                }
                elseif (this._level == 2)
                {
                    this._walk_frame = 1;
                    this._level_2_sprite_right.row_index = 1;
                    this._level_2_sprite_right.col_index = 3;
                }
                elseif (this._level == 3)
                {
                    this._walk_frame = 1;
                    this._level_3_sprite_right.row_index = 1;
                    this._level_3_sprite_right.col_index = 3;
                }
            }
            elseif (this._ax < 0 && this._vx > 0)
            {
                if (this._level == 1)
                {
                    this._walk_frame = 1;
                    this._level_1_sprite_left.row_index = 1;
                    this._level_1_sprite_left.col_index = 5;
                }
                elseif (this._level == 2)
                {
                    this._walk_frame = 1;
                    this._level_2_sprite_left.row_index = 1;
                    this._level_2_sprite_left.col_index = 5;
                }
                elseif (this._level == 3)
                {
                    this._walk_frame = 1;
                    this._level_3_sprite_left.row_index = 1;
                    this._level_3_sprite_left.col_index = 5;
                }
            }
            elseif (this._right)
            {
                if (this._level == 1)
                {
                    this._level_1_sprite_right.row_index = 1;
                    if (this._walk_frame == 2)
                        this._level_1_sprite_right.col_index = 5;
                    elseif (this._walk_frame == 3)
                        this._level_1_sprite_right.col_index = 6;
                    else
                    {
                        this._walk_frame = 1;
                        this._level_1_sprite_right.col_index = 4;
                    }
                }
                elseif (this._level == 2)
                {
                    this._level_2_sprite_right.row_index = 1;
                    if (this._walk_frame == 2)
                        this._level_2_sprite_right.col_index = 5;
                    elseif (this._walk_frame == 3)
                        this._level_2_sprite_right.col_index = 6;
                    else
                    {
                        this._walk_frame = 1;
                        this._level_2_sprite_right.col_index = 4;
                    }
                }
                elseif (this._level == 3)
                {
                    this._level_3_sprite_right.row_index = 1;
                    if (this._walk_frame == 2)
                        this._level_3_sprite_right.col_index = 5;
                    elseif (this._walk_frame == 3)
                        this._level_3_sprite_right.col_index = 6;
                    else
                    {
                        this._walk_frame = 1;
                        this._level_3_sprite_right.col_index = 4;
                    }
                }
            }
            else
            {
                if (this._level == 1)
                {
                    this._level_1_sprite_left.row_index = 1;
                    if (this._walk_frame == 2)
                        this._level_1_sprite_left.col_index = 4;
                    elseif (this._walk_frame == 3)
                        this._level_1_sprite_left.col_index = 3;
                    else
                    {
                        this._walk_frame = 1;
                        this._level_1_sprite_left.col_index = 2;
                    }
                }
                elseif (this._level == 2)
                {
                    this._level_2_sprite_left.row_index = 1;
                    if (this._walk_frame == 2)
                        this._level_2_sprite_left.col_index = 4;
                    elseif (this._walk_frame == 3)
                        this._level_2_sprite_left.col_index = 3;
                    else
                    {
                        this._walk_frame = 1;
                        this._level_2_sprite_left.col_index = 2;
                    }
                }
                elseif (this._level == 3)
                {
                    this._level_3_sprite_left.row_index = 1;
                    if (this._walk_frame == 2)
                        this._level_3_sprite_left.col_index = 4;
                    elseif (this._walk_frame == 3)
                        this._level_3_sprite_left.col_index = 3;
                    else
                    {
                        this._walk_frame = 1;
                        this._level_3_sprite_left.col_index = 2;
                    }
                }
            }
        }
    }
}
